#!/usr/bin/env python3
# TODO: replace stderr with "import logging"
from sys import stderr
from os import environ
import feedparser
import telegram
from time import sleep

class RSS:
    def get_unread_feed(name: str, url: str):
        feed = feedparser.parse(url) 
        last_read_id = ""
        try:
            with open(f"last/{name}", "r") as last_read_file:
                last_read_id = last_read_file.read().strip()
        except FileNotFoundError:
            pass
        
        feed_unread = []
        for item in feed.entries:
            if item.id == last_read_id:
                break
            feed_unread.append(item)
        
        if not feed_unread:
            # TODO: mb there's a better way?
            exit(0)
        
        feed_unread.reverse()
        return feed_unread
    
    def save_last_unread(name: str, id: str):
        with open("phoronix-last", "w") as last_read_file:
            #last_read_file.write(id)
            pass

class Telegram:
    # return read/sent sent id
    def update(feed) -> str:
        token = environ["TOKEN"]
        chat_id = environ["CHAT_ID"]
        
        bot = telegram.Bot(token)
        counter = 0
        for article in feed:
            # telegram doesn't allow sending more than 20 messages per minute to the same chat
            if counter >= 20:
                counter = 0
                sleep(60)
        
            bot.send_message(chat_id, f"<a href=\"{article.link}\">{article.title}</a>\n{article.description}", parse_mode="HTML", disable_web_page_preview=True)
            counter += 1
            sleep(1)

        return feed[-1].id

if __name__ == "__main__":
    feed = RSS.get_unread_feed("phoronix", "https://www.phoronix.com/rss.php")
    last_read = Telegram.update(feed)
    RSS.save_last_unread("phoronix", last_read)
